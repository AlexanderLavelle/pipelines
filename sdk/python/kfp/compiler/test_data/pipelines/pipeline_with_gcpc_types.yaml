components:
  comp-model-consumer:
    executorLabel: exec-model-consumer
    inputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: google.VertexModel
            schemaVersion: 0.0.1
  comp-model-consumer-with-named-tuple:
    executorLabel: exec-model-consumer-with-named-tuple
    inputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: google.VertexModel
            schemaVersion: 0.0.1
    outputDefinitions:
      artifacts:
        model1:
          artifactType:
            schemaTitle: google.VertexModel
            schemaVersion: 0.0.1
        model2:
          artifactType:
            schemaTitle: google.VertexModel
            schemaVersion: 0.0.1
  comp-model-producer:
    executorLabel: exec-model-producer
    outputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: google.VertexModel
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-model-consumer:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - model_consumer
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'git+https://github.com/kubeflow/pipelines@temp-gcpc-kfpv2-compatibility-branch#subdirectory=components/google-cloud'\
          \ 'kfp==2.0.0-beta.1' 'kfp==2.0.0-beta.1' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\nfrom google_cloud_pipeline_components.types.artifact_types import VertexModel\n\
          \ndef model_consumer(model: Input[VertexModel]):\n    print('artifact.type:\
          \ ', type(model))\n    print('artifact.name: ', model.name)\n    print('artifact.uri:\
          \ ', model.uri)\n    print('artifact.metadata: ', model.metadata)\n\n"
        image: python:3.7
    exec-model-consumer-with-named-tuple:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - model_consumer_with_named_tuple
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'git+https://github.com/kubeflow/pipelines@temp-gcpc-kfpv2-compatibility-branch#subdirectory=components/google-cloud'\
          \ 'kfp==2.0.0-beta.1' 'kfp==2.0.0-beta.1' 'kfp==2.0.0-beta.1' && \"$0\"\
          \ \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\nfrom google_cloud_pipeline_components.types.artifact_types import VertexModel\n\
          from google_cloud_pipeline_components.types import artifact_types\n\ndef\
          \ model_consumer_with_named_tuple(\n    model: Input[VertexModel]\n) ->\
          \ NamedTuple('NamedTupleOutput', [('model1', artifact_types.VertexModel),\n\
          \                                     ('model2', artifact_types.VertexModel)]):\n\
          \    NamedTupleOutput = NamedTuple('NamedTupleOutput',\n               \
          \                   [('model1', artifact_types.VertexModel),\n         \
          \                          ('model2', artifact_types.VertexModel)])\n  \
          \  return NamedTupleOutput(model1=model, model2=model)\n\n"
        image: python:3.7
    exec-model-producer:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - model_producer
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'git+https://github.com/kubeflow/pipelines@temp-gcpc-kfpv2-compatibility-branch#subdirectory=components/google-cloud'\
          \ 'kfp==2.0.0-beta.1' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\nfrom google_cloud_pipeline_components.types import artifact_types\n\
          \ndef model_producer(model: Output[artifact_types.VertexModel]):\n    with\
          \ open(model.path, 'w') as f:\n        f.write('my model')\n\n"
        image: python:3.7
pipelineInfo:
  name: pipeline-with-gcpc-types
root:
  dag:
    tasks:
      model-consumer:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-consumer
        dependentTasks:
        - model-producer
        inputs:
          artifacts:
            model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: model-producer
        taskInfo:
          name: model-consumer
      model-consumer-with-named-tuple:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-consumer-with-named-tuple
        dependentTasks:
        - model-producer
        inputs:
          artifacts:
            model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: model-producer
        taskInfo:
          name: model-consumer-with-named-tuple
      model-producer:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-model-producer
        taskInfo:
          name: model-producer
schemaVersion: 2.1.0
sdkVersion: kfp-2.0.0-beta.1
