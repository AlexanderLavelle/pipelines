# PIPELINE DEFINITION
# Name: flip-coin-pipeline
# Inputs:
#    confirm: bool
components:
  comp-condition-1:
    dag:
      tasks:
        condition-2:
          componentRef:
            name: comp-condition-2
          inputs:
            parameters:
              pipelinechannel--flip-coin-Output:
                componentInputParameter: pipelinechannel--flip-coin-Output
              pipelinechannel--int-zero-through-three-Output:
                componentInputParameter: pipelinechannel--int-zero-through-three-Output
          taskInfo:
            name: condition-2
          triggerPolicy:
            condition: int(inputs.parameter_values['pipelinechannel--int-zero-through-three-Output'])
              == 0
        condition-3:
          componentRef:
            name: comp-condition-3
          inputs:
            parameters:
              pipelinechannel--confirm:
                componentInputParameter: pipelinechannel--confirm
              pipelinechannel--flip-coin-Output:
                componentInputParameter: pipelinechannel--flip-coin-Output
              pipelinechannel--int-zero-through-three-Output:
                componentInputParameter: pipelinechannel--int-zero-through-three-Output
          taskInfo:
            name: condition-3
          triggerPolicy:
            condition: '!(int(inputs.parameter_values[''pipelinechannel--int-zero-through-three-Output''])
              == 0) && int(inputs.parameter_values[''pipelinechannel--int-zero-through-three-Output''])
              == 1'
        condition-5:
          componentRef:
            name: comp-condition-5
          inputs:
            parameters:
              pipelinechannel--flip-coin-Output:
                componentInputParameter: pipelinechannel--flip-coin-Output
              pipelinechannel--int-zero-through-three-Output:
                componentInputParameter: pipelinechannel--int-zero-through-three-Output
          taskInfo:
            name: condition-5
          triggerPolicy:
            condition: '!(int(inputs.parameter_values[''pipelinechannel--int-zero-through-three-Output''])
              == 0) && !(int(inputs.parameter_values[''pipelinechannel--int-zero-through-three-Output''])
              == 1) && int(inputs.parameter_values[''pipelinechannel--int-zero-through-three-Output''])
              == 2'
        condition-6:
          componentRef:
            name: comp-condition-6
          inputs:
            parameters:
              pipelinechannel--flip-coin-Output:
                componentInputParameter: pipelinechannel--flip-coin-Output
              pipelinechannel--int-zero-through-three-Output:
                componentInputParameter: pipelinechannel--int-zero-through-three-Output
          taskInfo:
            name: condition-6
          triggerPolicy:
            condition: '!(int(inputs.parameter_values[''pipelinechannel--int-zero-through-three-Output''])
              == 0) && !(int(inputs.parameter_values[''pipelinechannel--int-zero-through-three-Output''])
              == 1) && !(int(inputs.parameter_values[''pipelinechannel--int-zero-through-three-Output''])
              == 2)'
    inputDefinitions:
      parameters:
        pipelinechannel--confirm:
          parameterType: BOOLEAN
        pipelinechannel--flip-coin-Output:
          parameterType: STRING
        pipelinechannel--int-zero-through-three-Output:
          parameterType: NUMBER_INTEGER
  comp-condition-2:
    dag:
      tasks:
        print-and-return:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-and-return
          inputs:
            parameters:
              text:
                runtimeValue:
                  constant: Got zero!
          taskInfo:
            name: print-and-return
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-Output:
          parameterType: STRING
        pipelinechannel--int-zero-through-three-Output:
          parameterType: NUMBER_INTEGER
  comp-condition-3:
    dag:
      tasks:
        condition-4:
          componentRef:
            name: comp-condition-4
          inputs:
            parameters:
              pipelinechannel--confirm:
                componentInputParameter: pipelinechannel--confirm
              pipelinechannel--flip-coin-Output:
                componentInputParameter: pipelinechannel--flip-coin-Output
              pipelinechannel--int-zero-through-three-Output:
                componentInputParameter: pipelinechannel--int-zero-through-three-Output
          taskInfo:
            name: condition-4
          triggerPolicy:
            condition: inputs.parameter_values['pipelinechannel--confirm'] == true
        print-and-return-2:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-and-return-2
          inputs:
            parameters:
              text:
                runtimeValue:
                  constant: Got one!
          taskInfo:
            name: print-and-return-2
    inputDefinitions:
      parameters:
        pipelinechannel--confirm:
          parameterType: BOOLEAN
        pipelinechannel--flip-coin-Output:
          parameterType: STRING
        pipelinechannel--int-zero-through-three-Output:
          parameterType: NUMBER_INTEGER
  comp-condition-4:
    dag:
      tasks:
        print-and-return-3:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-and-return-3
          inputs:
            parameters:
              text:
                runtimeValue:
                  constant: 'Confirmed: definitely got one.'
          taskInfo:
            name: print-and-return-3
    inputDefinitions:
      parameters:
        pipelinechannel--confirm:
          parameterType: BOOLEAN
        pipelinechannel--flip-coin-Output:
          parameterType: STRING
        pipelinechannel--int-zero-through-three-Output:
          parameterType: NUMBER_INTEGER
  comp-condition-5:
    dag:
      tasks:
        print-and-return-4:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-and-return-4
          inputs:
            parameters:
              text:
                runtimeValue:
                  constant: Got two!
          taskInfo:
            name: print-and-return-4
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-Output:
          parameterType: STRING
        pipelinechannel--int-zero-through-three-Output:
          parameterType: NUMBER_INTEGER
  comp-condition-6:
    dag:
      tasks:
        print-and-return-5:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-print-and-return-5
          inputs:
            parameters:
              text:
                runtimeValue:
                  constant: Got three!
          taskInfo:
            name: print-and-return-5
    inputDefinitions:
      parameters:
        pipelinechannel--flip-coin-Output:
          parameterType: STRING
        pipelinechannel--int-zero-through-three-Output:
          parameterType: NUMBER_INTEGER
  comp-flip-coin:
    executorLabel: exec-flip-coin
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-int-zero-through-three:
    executorLabel: exec-int-zero-through-three
    outputDefinitions:
      parameters:
        Output:
          parameterType: NUMBER_INTEGER
  comp-print-and-return:
    executorLabel: exec-print-and-return
    inputDefinitions:
      parameters:
        text:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-print-and-return-2:
    executorLabel: exec-print-and-return-2
    inputDefinitions:
      parameters:
        text:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-print-and-return-3:
    executorLabel: exec-print-and-return-3
    inputDefinitions:
      parameters:
        text:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-print-and-return-4:
    executorLabel: exec-print-and-return-4
    inputDefinitions:
      parameters:
        text:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
  comp-print-and-return-5:
    executorLabel: exec-print-and-return-5
    inputDefinitions:
      parameters:
        text:
          parameterType: STRING
    outputDefinitions:
      parameters:
        Output:
          parameterType: STRING
deploymentSpec:
  executors:
    exec-flip-coin:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - flip_coin
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef flip_coin() -> str:\n    import random\n    return 'heads' if\
          \ random.randint(0, 1) == 0 else 'tails'\n\n"
        image: python:3.7
    exec-int-zero-through-three:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - int_zero_through_three
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef int_zero_through_three() -> int:\n    import random\n    return\
          \ random.randint(0, 3)\n\n"
        image: python:3.7
    exec-print-and-return:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_and_return
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_and_return(text: str) -> str:\n    print(text)\n    return\
          \ text\n\n"
        image: python:3.7
    exec-print-and-return-2:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_and_return
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_and_return(text: str) -> str:\n    print(text)\n    return\
          \ text\n\n"
        image: python:3.7
    exec-print-and-return-3:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_and_return
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_and_return(text: str) -> str:\n    print(text)\n    return\
          \ text\n\n"
        image: python:3.7
    exec-print-and-return-4:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_and_return
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_and_return(text: str) -> str:\n    print(text)\n    return\
          \ text\n\n"
        image: python:3.7
    exec-print-and-return-5:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - print_and_return
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.1'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef print_and_return(text: str) -> str:\n    print(text)\n    return\
          \ text\n\n"
        image: python:3.7
pipelineInfo:
  name: flip-coin-pipeline
root:
  dag:
    tasks:
      condition-1:
        componentRef:
          name: comp-condition-1
        dependentTasks:
        - flip-coin
        - int-zero-through-three
        inputs:
          parameters:
            pipelinechannel--confirm:
              componentInputParameter: confirm
            pipelinechannel--flip-coin-Output:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: flip-coin
            pipelinechannel--int-zero-through-three-Output:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: int-zero-through-three
        taskInfo:
          name: condition-1
        triggerPolicy:
          condition: inputs.parameter_values['pipelinechannel--flip-coin-Output']
            == 'heads'
      flip-coin:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-flip-coin
        taskInfo:
          name: flip-coin
      int-zero-through-three:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-int-zero-through-three
        taskInfo:
          name: int-zero-through-three
  inputDefinitions:
    parameters:
      confirm:
        parameterType: BOOLEAN
schemaVersion: 2.1.0
sdkVersion: kfp-2.0.1
