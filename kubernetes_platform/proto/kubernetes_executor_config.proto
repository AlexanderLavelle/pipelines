syntax = "proto3";

package kfp_kubernetes;

import "google/protobuf/struct.proto";

// TODO: add option go_package

message KubernetesExecutorConfig {
    repeated SecretAsVolume secret_as_volume = 1;
    repeated SecretAsEnv secret_as_env = 2;
    repeated PvcMount pvc_mount = 3;
}

message SecretAsVolume {
    // name of the Secret
    string secret_name = 1;
    // container path to mount the Secret data
    string mount_path = 2;
}

message SecretAsEnv {
    // name of the Secret
    string secret_name = 1;

    message SecretKeyToEnvMap {
        // corresponds to a key of the Secret.data field
        string secret_key = 1;
        // env var to which secret_keyâ€™s data should be set
        string env_var = 2;
    }

    repeated SecretKeyToEnvMap key_to_env = 2;
}

message PvcMount {
    // identifier for the PVC
    oneof pvc_reference {
        // name of the PVC to mount
        string pvc_name = 1;
        // name of a CreatePVC task, for referencing a PVC created upstream
        string pvc_from_task = 2;
        // pass the input parameter from a parent component input parameter
        // used like TaskInputsSpec.InputParemterSpec.component_input_parameter
        string component_input_parameter = 3;
    }
    // container path to which the PVC should be mounted
    string mount_path = 4;
}


message CreatePvc {
    oneof name {
        // name of the PVC, if not dynamically generated
        string pvc_name = 1;
        // suffix for a dynamically generated PVC name of the form
        // {{workflow.name}}-<pvc_name_suffix>
        string pvc_name_suffix = 2;
    }
    // corresponds to PersistentVolumeClaim.spec.accessMode field
    repeated string access_modes = 3;
    // corresponds to PersistentVolumeClaim.spec.resources.requests.storage field
    string size = 4;
    // if true, corresponds to omitted PersistentVolumeClaim.spec.storageClassName
    bool default_storage_class = 5;
    // corresponds to PersistentVolumeClaim.spec.storageClassName string field
    // should only be used if default_storage_class is false
    string storage_class = 6;
    // corresponds to PersistentVolumeClaim.spec.volumeName field
    string volume_name = 7;
    // corresponds to PersistentVolumeClaim.metadata.annotations field
    google.protobuf.Struct annotations = 8;
}

message DeletePvc {
    // identifier for the PVC
    oneof pvc_reference {
        // name of the PVC to delete
        string pvc_name = 1;
        // name of a CreatePVC task, for referencing a PVC created upstream
        string pvc_from_task = 2;
        // PVC passed as input parameter from parent component
        // used like TaskInputsSpec.InputParemterSpec.component_input_parameter
        string component_input_parameter = 3;
    }
}
