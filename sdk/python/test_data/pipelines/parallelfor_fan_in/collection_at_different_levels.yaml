# PIPELINE DEFINITION
# Name: math-pipeline
# Outputs:
#    Output: int
components:
  comp-double:
    executorLabel: exec-double
    inputDefinitions:
      parameters:
        num:
          parameterType: NUMBER_INTEGER
    outputDefinitions:
      parameters:
        a:
          parameterType: NUMBER_INTEGER
        b:
          parameterType: NUMBER_INTEGER
  comp-for-loop-2:
    dag:
      outputs:
        parameters:
          pipelinechannel--double-a:
            valueFromParameter:
              outputParameterKey: pipelinechannel--double-a
              producerSubtask: for-loop-4
          pipelinechannel--sum-list-Output:
            valueFromParameter:
              outputParameterKey: Output
              producerSubtask: sum-list
      tasks:
        for-loop-4:
          componentRef:
            name: comp-for-loop-4
          parameterIterator:
            itemInput: pipelinechannel--loop-item-param-3
            items:
              raw: '[1, 2, 3]'
          taskInfo:
            name: for-loop-4
        sum-list:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-sum-list
          dependentTasks:
          - for-loop-4
          inputs:
            parameters:
              nums:
                taskOutputParameter:
                  outputParameterKey: pipelinechannel--double-a
                  producerTask: for-loop-4
          taskInfo:
            name: sum-list
    inputDefinitions:
      parameters:
        pipelinechannel--loop-item-param-1:
          parameterType: STRING
    outputDefinitions:
      parameters:
        pipelinechannel--double-a:
          parameterType: STRING
        pipelinechannel--sum-list-Output:
          parameterType: STRING
  comp-for-loop-4:
    dag:
      outputs:
        parameters:
          pipelinechannel--double-a:
            valueFromParameter:
              outputParameterKey: a
              producerSubtask: double
      tasks:
        double:
          cachingOptions:
            enableCache: true
          componentRef:
            name: comp-double
          inputs:
            parameters:
              num:
                componentInputParameter: pipelinechannel--loop-item-param-3
          taskInfo:
            name: double
    inputDefinitions:
      parameters:
        pipelinechannel--loop-item-param-3:
          parameterType: NUMBER_INTEGER
    outputDefinitions:
      parameters:
        pipelinechannel--double-a:
          parameterType: NUMBER_INTEGER
  comp-special-add:
    executorLabel: exec-special-add
    inputDefinitions:
      parameters:
        a:
          parameterType: LIST
        b:
          parameterType: NUMBER_INTEGER
    outputDefinitions:
      parameters:
        Output:
          parameterType: NUMBER_INTEGER
  comp-sum-list:
    executorLabel: exec-sum-list
    inputDefinitions:
      parameters:
        nums:
          parameterType: LIST
    outputDefinitions:
      parameters:
        Output:
          parameterType: NUMBER_INTEGER
  comp-sum-nested-lists:
    executorLabel: exec-sum-nested-lists
    inputDefinitions:
      parameters:
        nums:
          parameterType: LIST
    outputDefinitions:
      parameters:
        Output:
          parameterType: NUMBER_INTEGER
deploymentSpec:
  executors:
    exec-double:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - double
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-beta.9'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef double(num: int) -> NamedTuple('Outputs', [('a', int), ('b',\
          \ int)]):\n    Outputs = NamedTuple('Outputs', [('a', int), ('b', int)])\n\
          \    res = 2 * num\n    return Outputs(a=res, b=res)\n\n"
        image: python:3.7
    exec-special-add:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - special_add
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-beta.9'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef special_add(a: List[int], b: int) -> int:\n    return sum(a)\
          \ + b\n\n"
        image: python:3.7
    exec-sum-list:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - sum_list
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-beta.9'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef sum_list(nums: List[int]) -> int:\n    return sum(nums)\n\n"
        image: python:3.7
    exec-sum-nested-lists:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - sum_nested_lists
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-beta.9'\
          \ && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)

          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          python3 -m kfp.components.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef sum_nested_lists(nums: List[List[int]]) -> int:\n    import itertools\n\
          \    return sum(itertools.chain(*nums))\n\n"
        image: python:3.7
pipelineInfo:
  name: math-pipeline
root:
  dag:
    outputs:
      parameters:
        Output:
          valueFromParameter:
            outputParameterKey: Output
            producerSubtask: special-add
    tasks:
      for-loop-2:
        componentRef:
          name: comp-for-loop-2
        parameterIterator:
          itemInput: pipelinechannel--loop-item-param-1
          items:
            raw: '["a", "b", "c"]'
        taskInfo:
          name: for-loop-2
      special-add:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-special-add
        dependentTasks:
        - for-loop-2
        - sum-nested-lists
        inputs:
          parameters:
            a:
              taskOutputParameter:
                outputParameterKey: pipelinechannel--sum-list-Output
                producerTask: for-loop-2
            b:
              taskOutputParameter:
                outputParameterKey: Output
                producerTask: sum-nested-lists
        taskInfo:
          name: special-add
      sum-nested-lists:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-sum-nested-lists
        dependentTasks:
        - for-loop-2
        inputs:
          parameters:
            nums:
              taskOutputParameter:
                outputParameterKey: pipelinechannel--double-a
                producerTask: for-loop-2
        taskInfo:
          name: sum-nested-lists
  outputDefinitions:
    parameters:
      Output:
        parameterType: NUMBER_INTEGER
schemaVersion: 2.1.0
sdkVersion: kfp-2.0.0-beta.9
