{
  "pipelineInfo": {
    "name": "pipeline-with-nested-loops"
  },
  "sdkVersion": "kfp-2.0.0-alpha.1",
  "schemaVersion": "2.1.0",
  "deploymentSpec": {
    "executors": {
      "exec-print-op": {
        "container": {
          "image": "python:3.7",
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef print_op(msg: str, msg2: Optional[str] = None):\n    print(f'msg: {msg}, msg2: {msg2}')\n\n"
          ],
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "print_op"
          ]
        }
      },
      "exec-print-bool": {
        "container": {
          "image": "python:3.7",
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'kfp==2.0.0-alpha.1' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef print_bool(boolean: bool):\n    print(type(boolean))\n\n"
          ],
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "print_bool"
          ]
        }
      }
    }
  },
  "components": {
    "comp-for-loop-1": {
      "inputDefinitions": {
        "parameters": {
          "pipelinechannel--loop_parameter": {
            "parameterType": "LIST"
          },
          "pipelinechannel--loop_parameter-loop-item": {
            "parameterType": "STRUCT"
          }
        }
      },
      "dag": {
        "tasks": {
          "for-loop-2": {
            "taskInfo": {
              "name": "for-loop-2"
            },
            "inputs": {
              "parameters": {
                "pipelinechannel--loop_parameter-loop-item": {
                  "componentInputParameter": "pipelinechannel--loop_parameter-loop-item"
                },
                "pipelinechannel--loop_parameter-loop-item-subvar-p_a": {
                  "componentInputParameter": "pipelinechannel--loop_parameter-loop-item",
                  "parameterExpressionSelector": "parseJson(string_value)[\"p_a\"]"
                }
              }
            },
            "componentRef": {
              "name": "comp-for-loop-2"
            },
            "parameterIterator": {
              "items": {
                "inputParameter": "pipelinechannel--loop_parameter-loop-item-subvar-p_a"
              },
              "itemInput": "pipelinechannel--loop_parameter-loop-item-subvar-p_a-loop-item"
            }
          },
          "print-op": {
            "taskInfo": {
              "name": "print-op"
            },
            "inputs": {
              "parameters": {
                "msg": {
                  "componentInputParameter": "pipelinechannel--loop_parameter-loop-item",
                  "parameterExpressionSelector": "struct_value[\"p_b\"]"
                }
              }
            },
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-print-op"
            }
          }
        }
      }
    },
    "comp-for-loop-2": {
      "inputDefinitions": {
        "parameters": {
          "pipelinechannel--loop_parameter-loop-item": {
            "parameterType": "STRUCT"
          },
          "pipelinechannel--loop_parameter-loop-item-subvar-p_a": {
            "parameterType": "BOOLEAN"
          },
          "pipelinechannel--loop_parameter-loop-item-subvar-p_a-loop-item": {
            "parameterType": "BOOLEAN"
          }
        }
      },
      "dag": {
        "tasks": {
          "print-bool": {
            "taskInfo": {
              "name": "print-bool"
            },
            "inputs": {
              "parameters": {
                "boolean": {
                  "componentInputParameter": "pipelinechannel--loop_parameter-loop-item-subvar-p_a-loop-item",
                  "parameterExpressionSelector": "struct_value[\"a\"]"
                }
              }
            },
            "cachingOptions": {
              "enableCache": true
            },
            "componentRef": {
              "name": "comp-print-bool"
            }
          }
        }
      }
    },
    "comp-print-op": {
      "inputDefinitions": {
        "parameters": {
          "msg": {
            "parameterType": "STRING"
          }
        }
      },
      "executorLabel": "exec-print-op"
    },
    "comp-print-bool": {
      "inputDefinitions": {
        "parameters": {
          "boolean": {
            "parameterType": "BOOLEAN"
          }
        }
      },
      "executorLabel": "exec-print-bool"
    }
  },
  "root": {
    "inputDefinitions": {
      "parameters": {
        "loop_parameter": {
          "parameterType": "LIST",
          "defaultValue": [
            {
              "p_a": [
                {
                  "a": 1.0
                },
                {
                  "a": 1.0
                }
              ],
              "p_b": "hello"
            },
            {
              "p_a": [
                {
                  "a": 1.0
                },
                {
                  "a": 1.0
                }
              ],
              "p_b": "halo"
            }
          ]
        }
      }
    },
    "dag": {
      "tasks": {
        "for-loop-1": {
          "taskInfo": {
            "name": "for-loop-1"
          },
          "inputs": {
            "parameters": {
              "pipelinechannel--loop_parameter": {
                "componentInputParameter": "loop_parameter"
              }
            }
          },
          "componentRef": {
            "name": "comp-for-loop-1"
          },
          "parameterIterator": {
            "items": {
              "inputParameter": "pipelinechannel--loop_parameter"
            },
            "itemInput": "pipelinechannel--loop_parameter-loop-item"
          }
        }
      }
    }
  }
}